version: '3.7'
services:
    chrome:
        image: selenium/standalone-chrome:latest
        hostname: chrome
        networks:
            - airflownet
    web:
        build: 
          context: ./services/web
          dockerfile: Dockerfile.amd
        command: bash -c "alembic upgrade head && uvicorn main:app --host 0.0.0.0 --port 8000 --reload"
        ports:
            - 8000:8000
        expose:
          - 8000
        env_file:
          - .env
        depends_on: 
          - db
        volumes:
          - .:/usr/src/app
        networks:
            - airflownet
        image: maxenceroux/spotify_web_amd:latest
    db:
        image: postgres:12.0
        ports:
          - "5432:5432"
        volumes:
          - postgres_data:/var/lib/postgresql/data/
        environment:
          - POSTGRES_USER=postgres
          - POSTGRES_PASSWORD=postgres
          - POSTGRES_DB=test_db
        networks:
            - airflownet
    pgadmin:
        container_name: pgadmin
        image: dpage/pgadmin4
        environment:
          - PGADMIN_DEFAULT_EMAIL=pgadmin4@pgadmin.org
          - PGADMIN_DEFAULT_PASSWORD=admin
        ports:
          - "5050:80"
        depends_on:
          - db   
        networks:
            - airflownet
    postgres-airflow:
        image: postgres
        environment: 
          POSTGRES_PASSWORD: pssd
          POSTGRES_USER: airflowuser
          POSTGRES_DB: airflowdb
          AIRFLOW_SCHEMA: airflow
        ports:
          - "5433:5433"
        expose:
          - 5433
        restart: always
        volumes:
          - ./services/airflow/scripts_postgres:/docker-entrypoint-initdb.d
        command: -p 5433 #change port Postgres is running on
        networks:
          - airflownet
    airflow:
      build: 
        context: ./services/airflow
        dockerfile: Dockerfile.amd
      restart: always
      env_file:
        - .env
      depends_on: 
        - postgres-airflow
        - statsd-exporter
      ports:
        - 7777:8080
      volumes: 
        - ./services/airflow/dbt:/services/airflow/dbt
        - ./services/airflow/airflow:/services/airflow/airflow
      networks:
        - airflownet
      image: maxenceroux/airflow_amd:latest
    statsd-exporter:
        image: prom/statsd-exporter
        container_name: airflow-statsd-exporter
        command: "--statsd.listen-udp=:8125 --web.listen-address=:9102"
        ports:
            - 9123:9102
            - 8125:8125/udp
        networks:
            - airflownet
    # prometheus:
    #     image: prom/prometheus
    #     container_name: airflow-prometheus
    #     user: "0"
    #     ports:
    #         - 9090:9090
    #     volumes:
    #         - ./services/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    #         - ./services/prometheus/volume:/prometheus
    #     networks:
    #         - airflownet
    # grafana:
    #     image: grafana/grafana:7.1.5
    #     container_name: airflow-grafana
    #     environment:
    #         GF_SECURITY_ADMIN_USER: admin
    #         GF_SECURITY_ADMIN_PASSWORD: password
    #         GF_PATHS_PROVISIONING: /grafana/provisioning
    #     ports:
    #         - 3000:3000
    #     volumes:
    #         - ./services/grafana/volume/data:/grafana
    #         - ./services/grafana/volume/datasources:/grafana/datasources
    #         - ./services/grafana/volume/dashboards:/grafana/dashboards
    #         - ./services/grafana/volume/provisioning:/grafana/provisioning
    #     networks:
    #         - airflownet

volumes:
    postgres_data:
networks:
    airflownet:
      driver: bridge
    