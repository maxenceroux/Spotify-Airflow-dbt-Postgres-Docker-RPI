name: My first action hello world
on:
  push:
    # Publish `main` as Docker `latest` image.
    branches:
      - main
      - testing

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

jobs:
  # Run tests.
  # See also https://docs.docker.com/docker-hub/builds/automated-testing/
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: create env file
        run: |
          touch .env
          echo ${{ secrets.MY_PASSWORD}}
          echo SPOTIPY_CLIENT_ID=${{ secrets.SPOTIPY_CLIENT_ID}} >> .env
          echo SPOTIPY_CLIENT_SECRET=${{ secrets.SPOTIPY_CLIENT_SECRET}} >> .env
          echo SPOTIFY_USER=${{ secrets.SPOTIFY_USER}} >> .env
          echo SPOTIFY_PWD=${{ secrets.SPOTIFY_PWD}} >> .env
          echo DATABASE_URL=postgresql+psycopg2://postgres:postgres@db:5432 >> .env
          echo DBT_PROFILES_DIR=/services/airflow/dbt >> .env
          echo AIRFLOW_HOME=/services/airflow/airflow >> .env
          echo AIRFLOW__CORE__DAGS_FOLDER=/services/airflow/airflow/dags >> .env
          echo AIRFLOW__CORE__PARALLELISM=4 >> .env
          echo AIRFLOW__CORE__DAG_CONCURRENCY=4 >> .env
          echo AIRFLOW__CORE__MAX_ACTIVE_RUNS_PER_DAG=${{ secrets.AIRFLOW__CORE__MAX_ACTIVE_RUNS_PER_DAG}} >> .env
          echo POSTGRES_USER=${{ secrets.POSTGRES_USER}} >> .env
          echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD}} >> .env
          echo POSTGRES_HOST=${{ secrets.POSTGRES_HOST}} >> .env
          echo POSTGRES_PORT=5433 >> .env
          echo POSTGRES_DB=airflowdb >> .env
          echo DBT_POSTGRES_PASSWORD=${{ secrets.POSTGRES_HOST}} >> .env
          echo DBT_POSTGRES_USER=postgres >> .env
          echo DBT_POSTGRES_DB=postgres >> .env
          echo DBT_DBT_SCHEMA=test >> .env
          echo DBT_DBT_RAW_DATA_SCHEMA=public >> .env
          echo DBT_POSTGRES_HOST=db >> .env
          echo MY_USERNAME=${{ secrets.POSTGRES_HOST}} >> .env
          echo MY_PASSWORD=${{ secrets.MY_PASSWORD}} >> .env
      - name: build 
        run: docker-compose -f docker-compose-amd.yml up --build -d
      - name: sleep
        run: sleep 30
      - name: ps
        run: docker ps
      - name: init migration
        run: docker-compose -f docker-compose-amd.yml run web alembic revision --autogenerate -m "First migration"
      - name: migrate
        run: docker-compose -f docker-compose-amd.yml run web alembic upgrade head
      - name: add user
        run: |
          curl -d '{"username":"maxence", "username":"maxence"}' -H "Content-Type: application/json" -X POST http://localhost:8000/user

      - name: test
        run: docker-compose -f docker-compose-amd.yml run web pytest
